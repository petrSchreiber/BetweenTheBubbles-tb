#include once "entity_baseTypes.tbasicu"

uses "math"

type tEntity_Leaf extends tEntityBase
  physics    as tPhysicsBase
  collider    as tBoundingCircle
 
  function Initialize()
    me.typeName        = remain$(typeof$(me), ".") ' Cuts the udt. start
    me.entityAbility   = %ECS_RENDERABLE | %ECS_PHYSICSABLE | %ECS_COLLIDABLE
    me.collider.radius = 1
    
    me.physics.mass    = 1
  End Function

end type

function tEntity_Leaf_Render(leafPtr as DWord)
  dim leaf as tEntity_Leaf at leafPtr
  
  tbgl_pushColor 0, 255, 0
        
    int32 i
    tbgl_beginPoly %TBGL_POLYGON
      tbgl_vertex 0, 0
      
      for i = 1 to 16
        tbgl_vertex cos(degtorad(360/16*i))*leaf.collider.radius, sin(degtorad(360/16*i))*leaf.collider.radius
      next
      
      tbgl_vertex 0, 0
    tbgl_endPoly

  tbgl_popColor

End Function
